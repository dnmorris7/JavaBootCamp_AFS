package com.accenture.adf.newcodington.module7.sample;

/**
 * 
 * Event Pass Try-it on checking the number of tickets assigned ticket ID's
 * 
 * Topic: Try-it on error handling using assert
 * 
 */
//TODO 1. Create a public class named 'EventPass_TryIt1' with main method()
public class EventPass_TryIt{
	
	//TODO 2. Create a public, static method called main() that has one parameter 
	//          that is a String array called 'args' and doesn't return any values
	public static void main(String[] args) {
		//TODO 3. Declare an integer for number of children attending the event inside main() method
		//TODO 4. On next line, declare an integer for number of adults attending the event
		
		//TODO 5. On next line, declare an integer for number of tickets

		//TODO 6. Initialize the following variables:
		//	 		a. number of children
		//	 		b. number of adults
		//	 		c. number of tickets with the sum of number of children and number of adults
		//TODO 7. Declare a single dimensional integer array for ticket ID's
		
		//TODO 8. Initialize the array with number of tickets as the size
		int childAttendance;
		int adultAttendance;
		int numTickets;
		int[] ticketIDs;
		childAttendance=5;
		adultAttendance=6;
		numTickets=13;
		
		ticketIDs=new int[numTickets];
		
		//TODO 9. Print 'Verifying tickets assigned with ticket ID's' message to the console

		System.out.println("Verifying tickets assigned with Ticket ID numbers.");
		
		//TODO 10. Declare an integer for ticket ID and initialize it with zero
	int passID=20;
		
		//TODO 11. Use for loop with number of tickets as the boundary to populate the ticket ID array
		//			a. Ticket ID can be generated by adding 1 to the loop index
		//			b. Assign ticket id generated to the respective index in the array
	for (int i = 0; i < ticketIDs.length; i++) {
	ticketIDs[i]	= passID;
	}
		//TODO 12. Declare an integer variable for the loop index and initialize with zero (in main() method)
	int i=0;	
	while(i<ticketIDs.length){
		assert(ticketIDs[i]!=0):" 'Mismatch in issuance of ticket ID's  ";
		i++;
	}
		
	}
	
}


	


	

	
	
	//TODO 13. Loop through the array using a do..while loop with array size as the boundary
	
	//TODO 14. Verify each value of the ticket id array is not equal to zero using assert statement

	//TODO 15. Print ticket ID value to console
	
	//TODO 16. If equal to zero, print 'Mismatch in issuance of ticket ID's' to the console as an assertion error
	
	//TODO 17. Otherwise, increase the loop index and verify all the values in the array
	
	//TODO 18. In case no assertion errors, print "Ticket ID's are assigned to total number of tickets issued." to the console after exiting the loop 
	
	//TODO 19. Save the file